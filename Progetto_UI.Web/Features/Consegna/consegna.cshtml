@model Progetto_UI.Web.Features.Consegna.ConsegnaViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interfaccia di Consegna</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #6063A0;
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .back-home {
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 1100;
        }

        .overlay-content {
            background-color: #5c5cad;
            padding: 20px;
            border-radius: 8px;
            color: white;
            text-align: center;
        }

            .overlay-content button {
                margin-top: 10px;
                padding: 10px;
                border: none;
                background-color: white;
                color: black;
                font-weight: bold;
                border-radius: 4px;
            }
    </style>
</head>
<body>
    <a href="@Url.Action("Home", "Consegna")" class="btn btn-dark back-home">
        <i class="bi bi-house-door-fill"></i> Home
    </a>

    <div class="container my-5">
        <h1 class="text-center mb-4">Interfaccia di Consegna</h1>

        <div class="mb-4">
            <label for="productCode" class="form-label">Fotografa il codice del Pezzo</label>
            <button id="captureProduct" class="btn btn-secondary w-100 mb-2"><i class="bi bi-camera-fill"></i>&nbsp;Fotografa</button>
            <p id="productCode" class="text-center">Codice Pezzo: @Model.ProductCode</p>
        </div>
        <button id="insertBtn" class="btn btn-primary w-100">Inserisci</button>
    </div>

    <script>
        const productCodeEl = document.getElementById('productCode');

        // Funzione per ottenere un prodotto casuale
        async function getRandomProduct() {
            try {
                const response = await fetch('/Consegna/GetAllProducts'); // Cambia URL con il tuo endpoint
                if (!response.ok) {
                    throw new Error('Errore nel recupero dei prodotti');
                }

                const products = await response.json();
                if (products.length === 0) {
                    alert("Nessun prodotto trovato!");
                    return;
                }

                // Seleziona un prodotto casuale
                const randomProduct = products[Math.floor(Math.random() * products.length)];

                // Mostra il nome del prodotto nel paragrafo productCode
                productCodeEl.textContent = `Codice Pezzo: ${randomProduct.name}`;
            } catch (error) {
                console.error("Errore nella richiesta API:", error);
                alert("Si è verificato un errore nel recupero dei prodotti!");
            }
        }

        // Aggiungi l'evento per il pulsante 'Fotografa' per mostrare un prodotto casuale
        document.getElementById('captureProduct').addEventListener('click', getRandomProduct);
    </script>
</body>
</html>
