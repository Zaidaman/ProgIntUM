@model Progetto_UI.Web.Features.Ricerca.RicercaViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ricerca Prodotto</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        body {
            background-color: #6063A0;
            color: white;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
        }

        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
        }

        .overlay-content {
            background-color: #5c5cad;
            padding: 20px;
            border-radius: 8px;
            color: white;
            text-align: center;
        }

            .overlay-content button {
                margin-top: 10px;
                padding: 10px;
                border: none;
                background-color: white;
                color: black;
                font-weight: bold;
                border-radius: 4px;
            }

        .search-section {
            padding: 50px 20px;
            text-align: center;
        }

            .search-section input {
                width: 300px;
                max-width: 100%;
                margin-bottom: 10px;
                padding: 10px;
                border: none;
                border-radius: 4px;
            }

            .search-section button {
                padding: 10px 20px;
                border: none;
                background-color: #5c5cad;
                color: white;
                font-weight: bold;
                border-radius: 4px;
            }
    </style>
</head>
<body>
    <a href="@Url.Action("Home", "Consegna")" class="btn btn-dark back-home">
        <i class="bi bi-house-door-fill"></i> Home
    </a>

    <div class="search-section">
        @section pageTitleContent {
        Ricerca Pezzo
        }
        <h2>Inserisci il codice del prodotto che vuoi ricercare</h2>
        <input type="text" id="productInput" placeholder="-----">
        <br>
        <button id="searchButton">Ricerca</button>
    </div>

    <div class="overlay" id="resultOverlay">
        <div class="overlay-content">
            <p id="productResult">Codice prodotto: </p>
            <p id="areaResult">Codice Area: </p>
            <button id="closeOverlay">Chiudi</button>
        </div>
    </div>

    <script>
            document.addEventListener("DOMContentLoaded", function () {
            const resultOverlay = document.getElementById('resultOverlay');
            const closeOverlay = document.getElementById('closeOverlay');
            const productResult = document.getElementById('productResult');
            const areaResult = document.getElementById('areaResult');
            const searchButton = document.getElementById('searchButton');
            const productInput = document.getElementById('productInput');

            if (!searchButton || !productInput || !resultOverlay || !closeOverlay) {
                console.error("Errore: Elementi DOM mancanti.");
                return;
            }

            searchButton.addEventListener('click', async () => {
                const productId = productInput.value.trim();

                if (!productId || isNaN(productId)) {
                    alert("Inserisci un ID numerico valido!");
                    return;
                }

                try {
                    const response = await fetch(`https://localhost:7132/ricerca/api/products/${productId}`);

                    if (!response.ok) {
                        throw new Error(`Errore ${response.status}: Prodotto non trovato`);
                    }

                    const product = await response.json();

                    // Aggiorna la visualizzazione dei risultati
                    productResult.textContent = `Codice prodotto: ${product.productId}`;
                    areaResult.textContent = `Nome: ${product.name}, Descrizione: ${product.description}, Area: ${product.spaceId ?? 'N/A'}`;
                    resultOverlay.style.display = 'flex';
                } catch (error) {
                    console.error("Errore nella richiesta API:", error);
                    alert("Prodotto non trovato!");
                }

                productInput.value = '';
            });

            closeOverlay.addEventListener('click', () => {
                resultOverlay.style.display = 'none';
            });
        });
    </script>
</body>